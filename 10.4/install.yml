---
- hosts: localhost
  become: no

  vars:
          ansible_connection: local
          percona_release: "percona-release_latest.{{ ansible_lsb.codename }}_all"

  tasks:
          - name: Include variables
            include_vars: 
                    file: /packages.yml

          - name: Pin the Percona repo
            lineinfile:
                    path: /etc/apt/preferences.d/percona
                    line: "{{ item.line }}"
                    regexp: "{{ item.regexp }}"
                    create: yes
            with_items:
                    - { regexp: '^Package:', line: 'Package: *;' } 
                    - { regexp: '^Pin:', line: 'Pin: release o=Percona Development Team;' }
                    - { regexp: '^Pin-Priority:', line: 'Pin-Priority: 998;' }
            loop_control:
                    label: "{{ item.line }}"

          - name: Install {{ percona_release }}.deb
            apt:
                    deb: "https://repo.percona.com/apt/{{ percona_release }}.deb"

          - name: Enable Percona repo
            shell: percona-release enable-only tools

          - name: Update all installed packages
            apt:
                    name: '*'
                    state: latest
                    update_cache: yes

        #   - name: run apt-get update
        #     shell: apt-get update
          - name: create dummy systemctl
            copy: 
                dest: /usr/bin/systemctl
                content: "#!/bin/bash"
                mode: '0775'

          - name: Install required packages
            apt:
                    name: "{{ packages }}"
                    state: latest

          - name: Change docker-entrypoint.sh to use pigz for gz files
            lineinfile:
                    path: /docker-entrypoint.sh
                    regexp: '\*.sql.gz\).*$'
                    line: "\t\t\t\t*.sql.gz)  echo \"$0: running $f\"; pigz -c \"$f\" | \"${mysql[@]}\"; echo ;;"
                    state: present

          - name: Add support for 7zip in docker-entrypoint.sh
            lineinfile:
                    path: /docker-entrypoint.sh
                    regexp: '\*.sql.7z\).*'
                    line: "\t\t\t\t*.sql.7z)  echo \"$0: running $f\"; 7z e \"$f\" -so | \"${mysql[@]}\"; echo ;;"
                    insertafter: '\*.sql.gz\).*'

          - name: Add support for lz4 in docker-entrypoint.sh
            lineinfile:
                    path: /docker-entrypoint.sh
                    regexp: '\*.sql.lz4\).*'
                    line: "\t\t\t\t*.sql.lz4)  echo \"$0: running $f\"; lz4 -d -c \"$f\" | \"${mysql[@]}\"; echo ;;"
                    insertafter: '\*.sql.7z\).*'

          - name: Add support for bzip2 in docker-entrypoint.sh
            lineinfile:
                    path: /docker-entrypoint.sh
                    regexp: '\*.sql.bz2\).*'
                    line: "\t\t\t\t*.sql.bz2)  echo \"$0: running $f\"; bunzip2 \"$f\" | \"${mysql[@]}\"; echo ;;"
                    insertafter: '\*.sql.lz4\).*'
          
          - name: clean dummy systemctl
            file:
                state: absent
                path: "/usr/bin/systemctl"

          - name: disable cracklib
            lineinfile:
                path: /etc/mysql/mariadb.conf.d/cracklib_password_check.cnf
                regexp: '^(plugin-load-add.*)'
                line: '#\1'
                backrefs: yes
            when: enable_cracklib|default("0")=="0"


          - name: disable rocksdb
            lineinfile:
                path: /etc/mysql/mariadb.conf.d/rocksdb.cnf
                regexp: '^(plugin-load-add.*)'
                line: '#\1'
                backrefs: yes
            when: enable_rocksdb|default("0")=="0"

            
